name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Global environment variables for all jobs
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GITHUB_OWNER: ${{ github.repository_owner }}
  GITHUB_REPO: ${{ github.event.repository.name }}
  CODECOV_API_TOKEN: ${{ secrets.CODECOV_API_TOKEN }}
  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  # Version generation environment variables
  GITHUB_RUN_ID: ${{ github.run_id }}
  GITHUB_SHA: ${{ github.sha }}
  GITHUB_REF: ${{ github.ref }}

jobs:
  quality-check:
    name: Quality Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run quality checks
        run: |
          echo "üîç Running comprehensive quality checks..."
          echo "1/4 Linting..."
          ./node_modules/.bin/eslint --ext .js,.jsx,.ts,.tsx,.astro src
          echo "2/4 Format checking..."
          ./node_modules/.bin/prettier --check "src/**/*.{js,jsx,ts,tsx,astro,json,md}"
          echo "3/4 Type checking..."
          ./node_modules/.bin/astro check --minimumSeverity error && ./node_modules/.bin/tsc --noEmit --skipLibCheck
          echo "4/4 Testing..."
          ./node_modules/.bin/vitest run
          echo "‚úÖ Quality checks completed"
        
      - name: Build project
        run: |
          echo "üèóÔ∏è Building for production..."
          NODE_ENV=production npm run fetch-data
          NODE_ENV=production ./node_modules/.bin/astro build
          npm run validate-version
          echo "‚úÖ Build completed successfully"
        
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: dist/
          retention-days: 7

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run tests
        run: npm run test
        continue-on-error: true  # Tests may not exist yet
        
      - name: Generate test coverage
        run: npm run test:coverage
        continue-on-error: true  # Tests may not exist yet
        
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/lcov.info

  ci-complete:
    name: CI Complete
    runs-on: ubuntu-latest
    needs: [quality-check, test]
    if: always()
    
    steps:
      - name: CI Pipeline Complete
        run: |
          echo "üéâ CI Pipeline completed successfully!"
          echo "‚úÖ Quality checks: ${{ needs.quality-check.result }}"
          echo "‚úÖ Tests: ${{ needs.test.result }}"
          
          if [[ "${{ needs.quality-check.result }}" == "success" ]]; then
            echo "‚úÖ All quality checks passed"
          else
            echo "‚ùå Quality checks failed"
            exit 1
          fi
