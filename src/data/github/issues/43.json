{
  "id": 3214091009,
  "node_id": "I_kwDOPJEskc6_kyMB",
  "number": 43,
  "title": "test: 統合テストとE2Eテストの実装",
  "body": "## 🎯 test: 統合テストとE2Eテストの実装\n\n### **Priority: MEDIUM**\n\n**Impact:** コードの品質向上、リグレッション防止、CI/CDの強化\n\n**Component:** テストインフラ、統合テスト、E2Eテスト\n\n**Files:** \n- `src/__tests__/integration/`\n- `src/__tests__/e2e/`\n- `playwright.config.ts`\n- `vitest.config.ts`\n- `.github/workflows/ci.yml`\n\n### Problem Description\n\n現在のテスト戦略には重要な欠陥があります：\n\n1. **統合テストの不足**: 単体テストは充実しているが、コンポーネント間の統合テストが不足\n2. **E2Eテストの不存在**: ユーザーワークフローの端から端までのテストが未実装\n3. **APIテストの不足**: GitHub API 統合のテストが不完全\n4. **CI/CDでのテスト不足**: 現在のCIでは基本的なテストのみ実行\n\n### Recommended Solution\n\n**Phase 1: 統合テストの実装**\n1. GitHub API クライアントの統合テスト\n2. Analytics エンジンとデータ処理の統合テスト\n3. コンポーネント間の統合テスト\n4. API エンドポイントのテスト\n\n**Phase 2: E2Eテストの実装**\n1. Playwright の導入とセットアップ\n2. 基本的なユーザーワークフローのテスト\n3. 検索・フィルタリング機能のテスト\n4. Analytics ダッシュボードのテスト\n\n**Phase 3: テストインフラの強化**\n1. テストデータの管理\n2. モッキング戦略の改善\n3. テストの並列実行\n4. CI/CDでのテスト実行最適化\n\n### Implementation Details\n\n**統合テストの実装:**\n```typescript\n// src/__tests__/integration/github-api.test.ts\nimport { describe, it, expect, beforeEach } from 'vitest';\nimport { GitHubClient } from '@/lib/github/client';\nimport { fetchGitHubIssues } from '@/lib/github/issues';\n\ndescribe('GitHub API 統合テスト', () => {\n  let client: GitHubClient;\n  \n  beforeEach(() => {\n    client = new GitHubClient({\n      token: 'test-token',\n      owner: 'test-owner',\n      repo: 'test-repo'\n    });\n  });\n\n  it('Issues を正常に取得できる', async () => {\n    const result = await fetchGitHubIssues(client.config);\n    \n    expect(result.success).toBe(true);\n    if (result.success) {\n      expect(result.data).toBeInstanceOf(Array);\n      expect(result.data.length).toBeGreaterThan(0);\n    }\n  });\n\n  it('API エラーを適切に処理する', async () => {\n    const invalidClient = new GitHubClient({\n      token: 'invalid-token',\n      owner: 'test-owner',\n      repo: 'test-repo'\n    });\n    \n    const result = await fetchGitHubIssues(invalidClient.config);\n    \n    expect(result.success).toBe(false);\n    if (\\!result.success) {\n      expect(result.error).toBeDefined();\n    }\n  });\n});\n```\n\n**E2Eテストの実装:**\n```typescript\n// src/__tests__/e2e/issue-workflow.spec.ts\nimport { test, expect } from '@playwright/test';\n\ntest.describe('Issue ワークフロー', () => {\n  test('Issues 一覧ページを表示できる', async ({ page }) => {\n    await page.goto('/issues');\n    \n    // ページタイトルの確認\n    await expect(page.locator('h1')).toContainText('Issues');\n    \n    // Issue カードの表示確認\n    await expect(page.locator('[data-testid=\"issue-card\"]')).toBeVisible();\n    \n    // 検索フィールドの確認\n    await expect(page.locator('[data-testid=\"search-input\"]')).toBeVisible();\n  });\n\n  test('Issue 詳細ページに遷移できる', async ({ page }) => {\n    await page.goto('/issues');\n    \n    // 最初の Issue カードをクリック\n    await page.locator('[data-testid=\"issue-card\"]').first().click();\n    \n    // 詳細ページの確認\n    await expect(page.url()).toContain('/issues/');\n    await expect(page.locator('[data-testid=\"issue-title\"]')).toBeVisible();\n    await expect(page.locator('[data-testid=\"issue-body\"]')).toBeVisible();\n  });\n\n  test('検索機能が動作する', async ({ page }) => {\n    await page.goto('/issues');\n    \n    // 検索フィールドに入力\n    await page.locator('[data-testid=\"search-input\"]').fill('bug');\n    \n    // 検索結果の確認\n    await expect(page.locator('[data-testid=\"search-results\"]')).toBeVisible();\n    await expect(page.locator('[data-testid=\"search-count\"]')).toContainText('件');\n  });\n});\n```\n\n**Playwright 設定:**\n```typescript\n// playwright.config.ts\nimport { defineConfig, devices } from '@playwright/test';\n\nexport default defineConfig({\n  testDir: './src/__tests__/e2e',\n  timeout: 30 * 1000,\n  expect: {\n    timeout: 5000\n  },\n  fullyParallel: true,\n  forbidOnly: \\!\\!process.env.CI,\n  retries: process.env.CI ? 2 : 0,\n  workers: process.env.CI ? 1 : undefined,\n  reporter: 'html',\n  use: {\n    actionTimeout: 0,\n    baseURL: 'http://localhost:3000',\n    trace: 'on-first-retry',\n  },\n  projects: [\n    {\n      name: 'chromium',\n      use: { ...devices['Desktop Chrome'] },\n    },\n    {\n      name: 'firefox',\n      use: { ...devices['Desktop Firefox'] },\n    },\n    {\n      name: 'webkit',\n      use: { ...devices['Desktop Safari'] },\n    },\n  ],\n  webServer: {\n    command: 'npm run preview',\n    port: 3000,\n  },\n});\n```\n\n### Acceptance Criteria\n\n- [ ] GitHub API 統合テストの実装\n- [ ] Analytics エンジン統合テストの実装\n- [ ] コンポーネント間統合テストの実装\n- [ ] Playwright E2E テストの実装\n- [ ] 基本的なユーザーワークフローのテスト\n- [ ] 検索・フィルタリング機能のE2Eテスト\n- [ ] Analytics ダッシュボードのE2Eテスト\n- [ ] CI/CDでのテスト実行\n- [ ] テストカバレージレポートの改善\n- [ ] テストデータの管理システム\n\n**アプリケーションの信頼性を大幅に向上させる重要な実装**",
  "user": {
    "login": "nyasuto",
    "id": 17446383,
    "node_id": "MDQ6VXNlcjE3NDQ2Mzgz",
    "avatar_url": "https://avatars.githubusercontent.com/u/17446383?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nyasuto",
    "html_url": "https://github.com/nyasuto",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 8910603341,
      "node_id": "LA_kwDOPJEskc8AAAACEx0ETQ",
      "name": "priority: medium",
      "description": "Medium priority tasks",
      "color": "fb8500",
      "default": false
    },
    {
      "id": 8910603599,
      "node_id": "LA_kwDOPJEskc8AAAACEx0FTw",
      "name": "type: test",
      "description": "Test related tasks",
      "color": "f9d71c",
      "default": false
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [],
  "milestone": null,
  "comments": 0,
  "created_at": "2025-07-09T00:31:19Z",
  "updated_at": "2025-07-09T00:31:19Z",
  "closed_at": null,
  "author_association": "OWNER",
  "active_lock_reason": null,
  "html_url": "https://github.com/nyasuto/beaver/issues/43",
  "url": "https://api.github.com/repos/nyasuto/beaver/issues/43",
  "repository_url": "https://api.github.com/repos/nyasuto/beaver",
  "labels_url": "https://api.github.com/repos/nyasuto/beaver/issues/43/labels{/name}",
  "comments_url": "https://api.github.com/repos/nyasuto/beaver/issues/43/comments",
  "events_url": "https://api.github.com/repos/nyasuto/beaver/issues/43/events"
}