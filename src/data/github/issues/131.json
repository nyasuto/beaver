{
  "id": 3219345200,
  "node_id": "I_kwDOPJEskc6_408w",
  "number": 131,
  "title": "feat: ローカルカバレッジファイルフォールバック機能実装",
  "body": "## 🎯 FEATURE: ローカルカバレッジファイルフォールバック機能実装\n\n### **Priority: MEDIUM**\n\n**Impact:** 品質分析機能の可用性向上\n\n**Component:** 品質分析ダッシュボード、カバレッジ分析\n\n**Files:** \n- src/lib/quality/codecov.ts\n- src/lib/quality/local-coverage.ts\n- src/pages/quality/index.astro\n\n### Problem Description\n\n現在の品質分析ダッシュボードは Codecov API に依存しており、以下の問題があります：\n\n1. **API利用不可時の対応不足**: Codecov API が利用できない場合、サンプルデータのみ表示\n2. **ローカル開発環境での制限**: 開発中に実際のカバレッジデータを確認できない\n3. **オフライン環境での機能制限**: インターネット接続がない環境での利用困難\n\n### Recommended Solution\n\nCodecov API が利用できない場合のフォールバック機能として、ローカルカバレッジファイルを読み込む機能を実装する。\n\n#### 1. ローカルカバレッジファイル対応\n- `coverage/lcov.info` ファイルの読み込み\n- `coverage-final.json` ファイルの読み込み\n- Jest/Vitest等のカバレッジ出力フォーマット対応\n\n#### 2. モノレポ対応\n- 複数パッケージのカバレッジファイル自動検出\n- パッケージごとのカバレッジメトリクス集計\n- ワークスペース構造の自動解析\n\n#### 3. フォールバック階層\n1. Codecov API（最優先）\n2. ローカルカバレッジファイル（フォールバック）\n3. サンプルデータ（最終フォールバック）\n\n### 技術仕様\n\n#### ローカルカバレッジファイル検出\n```typescript\n// 検出対象ファイル\nconst COVERAGE_FILES = [\n  'coverage/lcov.info',\n  'coverage/coverage-final.json',\n  'coverage/clover.xml',\n  'coverage/cobertura-coverage.xml'\n];\n\n// モノレポ対応\nconst MONOREPO_PATTERNS = [\n  'packages/*/coverage/',\n  'apps/*/coverage/',\n  'libs/*/coverage/'\n];\n```\n\n#### カバレッジデータ統合\n```typescript\ninterface LocalCoverageData {\n  totalLines: number;\n  coveredLines: number;\n  branchCoverage: number;\n  functionCoverage: number;\n  modules: ModuleCoverage[];\n  packages?: PackageCoverage[];\n}\n```\n\n### 実装課題\n\n#### モノレポ対応の複雑性\n1. **パッケージ構造の多様性**: \n   - Lerna/Nx/Rush等の異なるモノレポツール\n   - 独自のディレクトリ構造\n\n2. **カバレッジデータの重複排除**:\n   - 同一ファイルの複数パッケージでの重複\n   - 共有ライブラリの重複カウント\n\n3. **パフォーマンス最適化**:\n   - 大量のカバレッジファイル読み込み\n   - リアルタイムでのデータ集計\n\n#### 提案される解決策\n1. **設定ファイルによる構造定義**:\n   ```json\n   {\n     \"coverage\": {\n       \"monorepo\": true,\n       \"packages\": [\"packages/*\", \"apps/*\"],\n       \"exclude\": [\"**/node_modules/**\", \"**/dist/**\"]\n     }\n   }\n   ```\n\n2. **段階的読み込み**:\n   - 設定ファイルベース → 自動検出 → デフォルト\n\n3. **キャッシュ機能**:\n   - ファイル更新時間ベースのキャッシュ\n   - 増分更新による高速化\n\n### Acceptance Criteria\n\n- [ ] LCOV形式のカバレッジファイル読み込み機能\n- [ ] JSON形式のカバレッジファイル読み込み機能\n- [ ] モノレポ環境での複数パッケージ対応\n- [ ] カバレッジデータの重複排除ロジック\n- [ ] フォールバック階層の実装（Codecov API → ローカル → サンプル）\n- [ ] 設定ファイルによるモノレポ構造定義\n- [ ] パフォーマンス最適化（キャッシュ、遅延読み込み）\n- [ ] エラーハンドリングとログ出力の充実\n- [ ] 単体テストの実装（各カバレッジフォーマット対応）\n- [ ] ドキュメントの更新（README、設定例）\n\n**プロジェクトへの価値**: \n- 品質分析機能の可用性向上\n- 開発環境での実用性向上\n- モノレポ構造への対応\n- オフライン環境での利用可能性",
  "user": {
    "login": "nyasuto",
    "id": 17446383,
    "node_id": "MDQ6VXNlcjE3NDQ2Mzgz",
    "avatar_url": "https://avatars.githubusercontent.com/u/17446383?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nyasuto",
    "html_url": "https://github.com/nyasuto",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 8910603341,
      "node_id": "LA_kwDOPJEskc8AAAACEx0ETQ",
      "name": "priority: medium",
      "description": "Medium priority tasks",
      "color": "fb8500",
      "default": false
    },
    {
      "id": 8910603442,
      "node_id": "LA_kwDOPJEskc8AAAACEx0Esg",
      "name": "type: feature",
      "description": "New feature implementation",
      "color": "a2eeef",
      "default": false
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [],
  "milestone": null,
  "comments": 0,
  "created_at": "2025-07-10T13:18:31Z",
  "updated_at": "2025-07-10T13:18:31Z",
  "closed_at": null,
  "author_association": "OWNER",
  "active_lock_reason": null,
  "html_url": "https://github.com/nyasuto/beaver/issues/131",
  "url": "https://api.github.com/repos/nyasuto/beaver/issues/131",
  "repository_url": "https://api.github.com/repos/nyasuto/beaver",
  "labels_url": "https://api.github.com/repos/nyasuto/beaver/issues/131/labels{/name}",
  "comments_url": "https://api.github.com/repos/nyasuto/beaver/issues/131/comments",
  "events_url": "https://api.github.com/repos/nyasuto/beaver/issues/131/events"
}