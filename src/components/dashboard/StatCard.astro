---
/**
 * Statistics Card Component
 *
 * Displays key metrics for the dashboard with proper icons and formatting
 */

export interface Props {
  title: string;
  value: string | number;
  icon: string;
  description?: string;
  trend?: {
    direction: 'up' | 'down' | 'stable';
    value: string;
    period: string;
  };
  color?: 'blue' | 'green' | 'red' | 'yellow' | 'purple' | 'gray';
  size?: 'sm' | 'md' | 'lg';
}

const { title, value, icon, description, trend, color = 'blue', size = 'md' } = Astro.props;

// Color classes based on selected theme
const colorClasses = {
  blue: 'text-blue-600 bg-blue-50 border-blue-100',
  green: 'text-green-600 bg-green-50 border-green-100',
  red: 'text-red-600 bg-red-50 border-red-100',
  yellow: 'text-yellow-600 bg-yellow-50 border-yellow-100',
  purple: 'text-purple-600 bg-purple-50 border-purple-100',
  gray: 'text-gray-600 bg-gray-50 border-gray-100',
};

// Size classes for different card sizes
const sizeClasses = {
  sm: 'p-4',
  md: 'p-6',
  lg: 'p-8',
};

// Trend icons
const trendIcons = {
  up: 'üìà',
  down: 'üìâ',
  stable: '‚û°Ô∏è',
};

// Trend colors
const trendColors = {
  up: 'text-green-600',
  down: 'text-red-600',
  stable: 'text-gray-600',
};
---

<div class={`card ${sizeClasses[size]} min-h-[120px] sm:min-h-[140px]`}>
  <div class="flex items-center justify-between h-full">
    <div class="flex items-center space-x-3 min-w-0 flex-1">
      <div class={`p-2 sm:p-3 rounded-lg ${colorClasses[color]} flex-shrink-0`}>
        <span class="text-lg sm:text-xl">{icon}</span>
      </div>
      <div class="min-w-0 flex-1">
        <h3 class="text-sm font-medium text-gray-500 dark:text-gray-400 truncate">{title}</h3>
        <p class="text-xl sm:text-2xl font-bold text-gray-900 dark:text-white mt-1">{value}</p>
        {description && <p class="text-xs sm:text-sm text-gray-600 dark:text-gray-300 mt-1 truncate">{description}</p>}
      </div>
    </div>

    {
      trend && (
        <div class="flex items-center space-x-1 ml-2 flex-shrink-0">
          <span class="text-sm">{trendIcons[trend.direction]}</span>
          <span class={`text-sm font-medium ${trendColors[trend.direction]}`}>{trend.value}</span>
          <span class="text-xs text-gray-500 dark:text-gray-400 hidden sm:inline">{trend.period}</span>
        </div>
      )
    }
  </div>
</div>
