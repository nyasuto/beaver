---
/**
 * Issue Statistics Component
 *
 * Displays the most important issue statistics for quick overview
 * Simplified to show only essential metrics
 */

import StatCard from './StatCard.astro';
import { getStatsService } from '../../lib/services/StatsService';

// Get unified statistics using the StatsService
const statsService = getStatsService();
const statsResult = await statsService.getUnifiedStats({
  includeRecentActivity: true,
  includePriorityBreakdown: true,
  includeLabels: false,
  recentDays: 7,
});

// Extract data from unified stats
const stats = statsResult.success ? statsResult.data : null;

// Calculate derived metrics
const urgentIssues = stats ? stats.priority.critical + stats.priority.high : 0;
const recentActivity = stats ? stats.recentActivity.thisWeek : 0;

// Export interface for type checking
export interface Props {
  class?: string;
}

const { class: className = '' } = Astro.props;
---

<div class={`grid grid-cols-1 md:grid-cols-3 gap-6 ${className}`}>
  <!-- Open Issues -->
  <StatCard
    title="Open Issues"
    value={stats?.open || 0}
    icon="ðŸ”“"
    description="Currently active"
    color="green"
  />

  <!-- Urgent Issues -->
  <StatCard
    title="Urgent Issues"
    value={urgentIssues}
    icon="ðŸš¨"
    description="Critical & high priority"
    color="red"
  />

  <!-- Recent Activity -->
  <StatCard
    title="Recent Activity"
    value={recentActivity}
    icon="ðŸ“ˆ"
    description="Updated this week"
    color="blue"
  />
</div>
